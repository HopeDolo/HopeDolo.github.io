---
layout: post
title:      "The Reasons"
date:       2019-08-28 01:26:45 -0400
permalink:  the_reasons
---

 
 I've decided to partake in this journey of learning software development by way of the Flatiron School for a few reasons. I will go over some of those reasons in this post.
 
 I currently earn a living working for the Louisiana Department of Education, as an administrative coordinator. I have been there for a little over 3 years; that was after being out of a job for a year. I am apart of what we call the research team, within a call center setting, where we provide information to clients as it relates to their child care assistance cases. My day consists of answering the phone and sending emails to case workers, the people whom process the applicants applications. I must admit, I make an okay amount of money to say that I answer a phone and compose emails to case workers all day. As far as long term career prospects goes, I feel that I'm limited to being an actual case worker, as well as a few other roles within the department that pertains to early childhood, for example being apart of the fraud or payments team. In my case, the opportunities available to me only go as far as having a particular, specialized skill set, which I currently do not feel that I have a highly sought after skill set. 
 
 Well, if you have been paying attention over the last several years, you may have come across the fact that there is one highly specialized skill set that is in high demand and that will be in high demand for the next 15 to 20 years at a minimum. That skillset is knowing how to create software. At my job, we use plenty of software to get our job done. There's TouchPoint, the software used to take and make calls, and there is CAFE, the system the clients use to submit their childcare applications. CAFE is also where we keep case notes of the clients cases and there's this old piece of software called CAPS that we use, which is a database filled with clients case information. Using these pieces of software are second nature, as is using software in general. I go to work, use software, and then I go home and use software as well. It's never ending. Someone is getting paid a good amount of money to build and mantain these pieces of software. I want to be that someone. 
 
 In the cities of Baton Rouge and New Orleans alone, there are plenty of companies looking for professionals that knows how to write software and they are building some pretty cool things, things that will have an impact on a person directly or indirectly. For instance, there's this company in Baton Rouge, called LocalMed, they make online scheduling software for dentists and they seem like such a great company. They don't hire for software developers solely, but a third of their small team are made up of software developers. I know there's a place for me on someones dev team. All I have to do is obtain the needed capabilities and that's where Learn.co comes in.
 
 So the first and most important reason for me embarking on this journey is the opportunities that getting into this field provides, on  a job/career level and on other levels as well. For example, a friend of mine is a JavaScript developer, he makes about $90,000 a year and he travels so much. I love to travel as well and making a good salary is the key to doing so on a regular basis.
 
 Another reason for me wanting to learn software development is due to the fact that I hold a bachelor's degree in computer science. I know what you're thinking, why am I going through this program and curriculum if I have a 4 year degree in computer science. Well, back in 2009, after graduating high school, I decided to major in computer science. I had no background in computationial thinking, not that a background is needed per se, but I was introduced to the world of programming by way of the language C++. Don't get me wrong, C++ is a promising language, but I could never get past the basics, with how difficult of a language it is, and honestly I checked out mentally long before making it to year 4. Not that I condone quitting, but I should have chosen another major at least, for instance business(supply chain) and learned to program the way that I'm going about it currently, although back in 2009 there was no such thing as a Flatiron School or the like. There's this Yehuda Katz tweet, where he states that a relative of his, whom was really interesed in programming, went to college and her first course was in C++. He states that it was too much too fast for her and she quit and never became a programmer. He ended the tweet saying, "unless we're actively trying to reduce the number of programmers, don't start with C or C++". So for some, C++ and Java may be  a good language to start with but for most people it's a language that does not feel natural, the way that Ruby does. With that being said, for me personally, successfully making it through Flatiron School's curriculum, where I will have 4 or 5 projects built to showcase what I can do will validate the degree that I do have and I won't feel bad for having a highly sought after degree that I can't currently use. 
 
 One of a few dream companies of mine, StocxX, located in Detroit, currently has a few software engineering positions open. Most of those positions may be more senior level, with few of them being junior level, but the point is that the opportunity is everywhere, even in niche things like buying/selling sneakers for profit.  There's even a company called StitchFix, that is like your personal stylist, sending hand picked items to your doorstep every so often. It's cool knowing that I could possibly work on software that I have a huge interest in, such as sneakers and fashion. Even knowing that I could possibly build software that dentists use is cool, with how common scheduling denstist appointments are. 
 
 In order for me to get that passion and love for programming within me I have to be able to build on top of intro to ruby, to the CLI project and beyond to the last project. I really love the way that Learn.co goes about teaching and stucturing the development of software and I love how there are hundreds of others, learning away and helping their peers as well. The community is also a big part of why I am choosing to learn software develpment this way, although I'm learning in a self paced manner. The support and team effort are much needed in this journey and I am provided with all the tools needed to succeed through this program and curriculum. 
 
 Ultimately, I want to be able to be an example for others who may want to break into tech, in what is considered an unconventional method. There is more than one way to skin a cat and there is more than one way to learning how to create software professionally.  I hope to learn these skills and then to be able to help others that are on their journy to becoming a profession software developer. 
 
 There are more reasons that I or one could have for wanting to learn software development,  but I'm going to leave it at the few that I have mentioned.
 




